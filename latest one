
#include <p30F6014A.h>
#include <motor_led/e_epuck_ports.h>
#include <motor_led/e_init_port.h>
#include <a_d/advance_ad_scan/e_prox.h>
#include <a_d/advance_ad_scan/e_ad_conv.h>
#include <uart/e_uart_char.h>
#include <stdio.h>
#include <codec/e_sound.h>
/// THINK ABOUT USING THE TURN COUNTERS
/// 
void Wait(long);
int GetSelector(void);         
int tcount = 0;

int main()
{
    // Initialisation. 
    e_init_port(); // Initialises the ports.
    e_init_ad_scan(ALL_ADC); // Initialises the analogue to digital converters.
    e_led_clear(); // Turn off all the LEDs in the initialisation stage.
    e_start_agendas_processing(); // Allows the robot to execute multiple tasks.
    
    e_init_uart1(); // Initialises the UART. Uncomment when you use Bluetooth communication.
    e_calibrate_ir(); // Uncomment when you use Proximity Sensors.
    e_init_motors(); // Initialises the motors. Uncomment when you use the motors.

    // Main Loop.
    
    if (GetSelector() == 1)	
    {
        e_led_clear();
	e_play_sound(7294, 3732);  // MAKING THE E-PUCK MOVE FORWARD
	e_set_speed_left(500);
	e_set_speed_right(500);
             
	if (e_get_prox(0) > 3000)
        {
	  e_close_sound(void);     // MAKING THE SOUND STOP
          Wait(1000000);		
	  ee_init_sound(void);  // REINITIATING THE SOUND
	  e_play_sound(2116,1760); // SOUND PLAYING
          e_set_speed_left(0); 
 	  e_set_speed_right(0);
	  e_close_sound(void);	
	  Wait(10000);
          
	  ee_init_sound(void);
	  e_play_sound(3878, 3412);
	  e_set_speed_left(1000);
	  e_set_speed_right(-500);
	   
	  Wait(10000);
	  
	  while (e_get_prox(0) > 3000) // Inner Loop
   	  {
	    e_close_sound(void);
	    ee_init_sound(void);
	    e_play_sound(11028, 8016);
	    e_set_speed_left(1000);
	    e_set_speed_right(-500);
	    Wait(10000);
	    tcount =++;	
	  }
        if(tcount > 4)
        {
            e_close_sound(void);
	    ee_init_sound(void);
	    e_play_sound(0,2112);
	    e_set_speed_left(1000);
	    e_set_speed_right(-500);
	    Wait(10000);
	    tcount = 0;
	}
}
    if (GetSelector() == 3)
	{
	
	  e_set_speed_left(1000);
	  e_set_speed_right(-500);
	  Wait(3000000);
          e_set_speed_left(500);
	  e_set_speed_right(500);     		  
	
	 if (e_get_prox(0) > 3000)
	 {
	   e_set_speed_left(0); 
 	   e_set_speed_right(0);
   	   Wait(100000);
	   e_set_speed_left(1000);
	   e_set_speed_right(-500);
	}
}
   if (GetSelector() == 5)
	{
	   e_set_speed_left(0);  
       	   e_set_speed_right(0);
        
        if (e_get_prox(1) > 500) 
        {
            e_set_speed_left(1000);        
            e_set_speed_right(-500);
            Wait(100000);
            e_set_speed_left(300);
            e_set_speed_right(300);
            if (e_get_prox(0) > 2500)
            {
                e_set_speed_left(0);  
                e_set_speed_right(0);
            }
        }
        else if (e_get_prox(2) > 500) 
        {
            e_set_speed_left(1000);        
            e_set_speed_right(-500);
            Wait(500000);
            e_set_speed_left(300);
            e_set_speed_right(300);
            if (e_get_prox(0) > 2500)
            {
                e_set_speed_left(0);  
                e_set_speed_right(0);
            }
        }
            
        else if (e_get_prox(3) > 500)
        {
            e_set_speed_left(-300);
            e_set_speed_right(-300);
            if (e_get_prox(3) > 2500)
            {
                e_set_speed_left(0);  
                e_set_speed_right(0);
            }
            
        }
        else if (e_get_prox(5) > 500)
        {
            e_set_speed_left(-500);        
            e_set_speed_right(1000);
            Wait(500000);
            e_set_speed_left(300);
            e_set_speed_right(300);  
        }
            
        else if (e_get_prox(6) > 500)
        {
            e_set_speed_left(-500);        
            e_set_speed_right(1000);
            Wait(100000);
            e_set_speed_left(300);
            e_set_speed_right(300);  
        }
            
    }
}
   
    return 0;
}

void Wait(long Duration) 
{
    long i;
    for(i=0;i<Duration;i++);
}

int GetSelector() {
    return SELECTOR0 + 2*SELECTOR1 + 4*SELECTOR2 + 8*SELECTOR3;
}
Combined_code.txt
Displaying Combined_code.txt.
